'use client'

import React, { useState } from 'react'

interface ComplianceReport {
  id: string
  type: 'cto' | 'vat' | 'tourism_tax' | 'gdpr' | 'employment' | 'health_safety'
  title: string
  description: string
  reportingPeriod: string
  nextDueDate: string
  status: 'current' | 'due_soon' | 'overdue' | 'submitted'
  lastSubmitted?: string
  submittedBy?: string
  autoGenerated: boolean
}

interface TaxReport {
  period: string
  roomRevenue: number
  serviceRevenue: number
  totalRevenue: number
  vatCollected: number
  vatRate: number
  tourismTaxCollected: number
  tourismTaxNights: number
  tourismTaxRate: number
  exemptions: {
    children: number
    locals: number
    diplomatic: number
  }
}

interface GDPRRecord {
  id: string
  type: 'data_request' | 'data_deletion' | 'data_breach' | 'consent_update'
  guestName: string
  guestEmail: string
  requestDate: string
  status: 'pending' | 'in_progress' | 'completed' | 'escalated'
  processedBy?: string
  completedDate?: string
  description: string
  priority: 'low' | 'medium' | 'high'
}

interface LegalDocument {
  id: string
  title: string
  type: 'contract' | 'policy' | 'terms' | 'privacy' | 'license'
  language: 'en' | 'el'
  lastUpdated: string
  version: string
  status: 'active' | 'draft' | 'expired'
  applicableRegion: string
}

interface ComplianceMetric {
  area: string
  score: number
  maxScore: number
  lastAudit: string
  findings: number
  recommendations: string[]
}

export default function CompliancePage() {
  const [activeTab, setActiveTab] = useState('overview')
  const [selectedPeriod, setSelectedPeriod] = useState('current')
  const [reportType, setReportType] = useState('all')

  // Button handlers
  const handleGenerateReport = async () => {
    const toastId = toast.loading('Generating compliance report...')
    try {
      const response = await fetch('/api/compliance/export', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          reportType: 'general',
          dateRange: selectedPeriod,
          format: 'pdf'
        })
      })

      const data = await response.json()
      if (data.success) {
        toast.success(data.message, { id: toastId })
      } else {
        toast.error('Failed to generate compliance report', { id: toastId })
      }
    } catch (error) {
      toast.error('Error generating compliance report', { id: toastId })
    }
  }

  const handleComplianceAudit = async () => {
    const toastId = toast.loading('Running compliance audit...')
    try {
      const response = await fetch('/api/compliance/export', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          reportType: 'audit',
          dateRange: selectedPeriod,
          format: 'pdf'
        })
      })

      const data = await response.json()
      if (data.success) {
        toast.success('Compliance audit completed successfully!', { id: toastId })
      } else {
        toast.error('Failed to complete compliance audit', { id: toastId })
      }
    } catch (error) {
      toast.error('Error running compliance audit', { id: toastId })
    }
  }

  const handleSettings = () => {
    toast.info('Opening compliance settings panel...')
  }

  const handleExportTaxReport = async () => {
    const toastId = toast.loading('Exporting tax report...')
    try {
      const response = await fetch('/api/compliance/export', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          reportType: 'tax',
          dateRange: selectedPeriod,
          format: 'excel'
        })
      })

      const data = await response.json()
      if (data.success) {
        toast.success(data.message, { id: toastId })
      } else {
        toast.error('Failed to export tax report', { id: toastId })
      }
    } catch (error) {
      toast.error('Error exporting tax report', { id: toastId })
    }
  }

  const handleGenerateGDPRReport = () => {
    toast.loading('Generating GDPR compliance report...')
    setTimeout(() => {
      toast.success('GDPR report generated!')
    }, 2000)
  }

  const handleProcessGDPRRequest = () => {
    toast.success('GDPR request processed successfully!')
  }

  const handleViewDocument = (docTitle: string) => {
    toast.info(`Opening ${docTitle}...`)
  }

  const handleUploadDocument = () => {
    toast.info('Document upload feature will open...')
  }

  const handleSubmitReport = (reportType: string) => {
    toast.loading(`Submitting ${reportType} report...`)
    setTimeout(() => {
      toast.success(`${reportType} report submitted successfully!`)
    }, 1500)
  }

  const complianceReports: ComplianceReport[] = [
    {
      id: 'cto-monthly',
      type: 'cto',
      title: 'CTO Monthly Tourism Statistics',
      description: 'Monthly tourism statistics report for Cyprus Tourism Organization',
      reportingPeriod: 'Monthly',
      nextDueDate: '2025-01-15',
      status: 'due_soon',
      lastSubmitted: '2024-12-15',
      submittedBy: 'Elena Papadopoulos',
      autoGenerated: true
    },
    {
      id: 'vat-quarterly',
      type: 'vat',
      title: 'VAT Return (19%)',
      description: 'Quarterly VAT return for Cyprus Tax Department',
      reportingPeriod: 'Quarterly',
      nextDueDate: '2025-01-31',
      status: 'current',
      lastSubmitted: '2024-10-31',
      submittedBy: 'Maria Constantinou',
      autoGenerated: true
    },
    {
      id: 'tourism-tax-monthly',
      type: 'tourism_tax',
      title: 'Tourism Development Tax',
      description: 'Monthly tourism development tax collection report',
      reportingPeriod: 'Monthly',
      nextDueDate: '2025-01-10',
      status: 'due_soon',
      lastSubmitted: '2024-12-10',
      submittedBy: 'Andreas Georgiou',
      autoGenerated: true
    },
    {
      id: 'gdpr-annual',
      type: 'gdpr',
      title: 'GDPR Compliance Audit',
      description: 'Annual GDPR compliance assessment and data protection review',
      reportingPeriod: 'Annually',
      nextDueDate: '2025-05-25',
      status: 'current',
      lastSubmitted: '2024-05-25',
      submittedBy: 'Dimitris Ioannou',
      autoGenerated: false
    },
    {
      id: 'employment-quarterly',
      type: 'employment',
      title: 'Employment Law Compliance',
      description: 'Quarterly employment compliance report for Labor Department',
      reportingPeriod: 'Quarterly',
      nextDueDate: '2025-01-31',
      status: 'current',
      lastSubmitted: '2024-10-31',
      submittedBy: 'Sophia Christou',
      autoGenerated: false
    },
    {
      id: 'health-safety-annual',
      type: 'health_safety',
      title: 'Health & Safety Compliance',
      description: 'Annual health and safety compliance certification',
      reportingPeriod: 'Annually',
      nextDueDate: '2025-03-15',
      status: 'current',
      lastSubmitted: '2024-03-15',
      submittedBy: 'Nikos Constantinou',
      autoGenerated: false
    }
  ]

  const taxReports: TaxReport[] = [
    {
      period: '2024-12',
      roomRevenue: 187450.00,
      serviceRevenue: 59895.50,
      totalRevenue: 247345.50,
      vatCollected: 46995.65,
      vatRate: 19,
      tourismTaxCollected: 2437.50,
      tourismTaxNights: 1625,
      tourismTaxRate: 1.50,
      exemptions: {
        children: 234,
        locals: 89,
        diplomatic: 12
      }
    },
    {
      period: '2024-11',
      roomRevenue: 156780.00,
      serviceRevenue: 48965.25,
      totalRevenue: 205745.25,
      vatCollected: 39091.60,
      vatRate: 19,
      tourismTaxCollected: 2025.00,
      tourismTaxNights: 1350,
      tourismTaxRate: 1.50,
      exemptions: {
        children: 198,
        locals: 76,
        diplomatic: 8
      }
    },
    {
      period: '2024-10',
      roomRevenue: 198560.00,
      serviceRevenue: 62180.75,
      totalRevenue: 260740.75,
      vatCollected: 49540.74,
      vatRate: 19,
      tourismTaxCollected: 2587.50,
      tourismTaxNights: 1725,
      tourismTaxRate: 1.50,
      exemptions: {
        children: 267,
        locals: 93,
        diplomatic: 15
      }
    }
  ]

  const gdprRecords: GDPRRecord[] = [
    {
      id: 'gdpr-001',
      type: 'data_request',
      guestName: 'John Smith',
      guestEmail: 'john.smith@email.com',
      requestDate: '2024-12-28',
      status: 'in_progress',
      processedBy: 'Sophia Christou',
      description: 'Request for all personal data held in our systems',
      priority: 'medium'
    },
    {
      id: 'gdpr-002',
      type: 'data_deletion',
      guestName: 'Maria Rodriguez',
      guestEmail: 'maria.rodriguez@email.com',
      requestDate: '2024-12-25',
      status: 'completed',
      processedBy: 'Elena Papadopoulos',
      completedDate: '2024-12-30',
      description: 'Request to delete all personal data after stay completion',
      priority: 'high'
    },
    {
      id: 'gdpr-003',
      type: 'consent_update',
      guestName: 'Hans Mueller',
      guestEmail: 'hans.mueller@email.com',
      requestDate: '2024-12-20',
      status: 'completed',
      processedBy: 'Maria Constantinou',
      completedDate: '2024-12-22',
      description: 'Updated marketing consent preferences',
      priority: 'low'
    },
    {
      id: 'gdpr-004',
      type: 'data_breach',
      guestName: 'System Alert',
      guestEmail: 'system@cyprus-hotels.com',
      requestDate: '2024-12-15',
      status: 'escalated',
      processedBy: 'Dimitris Ioannou',
      description: 'Minor data access log anomaly detected - investigating',
      priority: 'high'
    }
  ]

  const legalDocuments: LegalDocument[] = [
    {
      id: 'doc-001',
      title: 'Terms and Conditions',
      type: 'terms',
      language: 'en',
      lastUpdated: '2024-11-15',
      version: '3.2',
      status: 'active',
      applicableRegion: 'EU'
    },
    {
      id: 'doc-002',
      title: 'Privacy Policy',
      type: 'privacy',
      language: 'en',
      lastUpdated: '2024-10-20',
      version: '2.8',
      status: 'active',
      applicableRegion: 'Global'
    },
    {
      id: 'doc-003',
      title: 'Όροι και Προϋποθέσεις',
      type: 'terms',
      language: 'el',
      lastUpdated: '2024-11-15',
      version: '3.2',
      status: 'active',
      applicableRegion: 'Cyprus'
    },
    {
      id: 'doc-004',
      title: 'Employee Contract Template',
      type: 'contract',
      language: 'en',
      lastUpdated: '2024-09-30',
      version: '1.5',
      status: 'active',
      applicableRegion: 'Cyprus'
    },
    {
      id: 'doc-005',
      title: 'Hotel Operating License',
      type: 'license',
      language: 'el',
      lastUpdated: '2024-01-15',
      version: '1.0',
      status: 'active',
      applicableRegion: 'Cyprus'
    },
    {
      id: 'doc-006',
      title: 'Cookie Policy',
      type: 'policy',
      language: 'en',
      lastUpdated: '2024-08-12',
      version: '1.3',
      status: 'draft',
      applicableRegion: 'EU'
    }
  ]

  const complianceMetrics: ComplianceMetric[] = [
    {
      area: 'Data Protection (GDPR)',
      score: 94,
      maxScore: 100,
      lastAudit: '2024-11-15',
      findings: 2,
      recommendations: [
        'Update cookie consent mechanism',
        'Implement automated data retention policies',
        'Enhance staff GDPR training'
      ]
    },
    {
      area: 'Tax Compliance',
      score: 98,
      maxScore: 100,
      lastAudit: '2024-12-01',
      findings: 1,
      recommendations: [
        'Automate tourism tax exemption tracking',
        'Implement real-time VAT calculations'
      ]
    },
    {
      area: 'Tourism Regulations',
      score: 92,
      maxScore: 100,
      lastAudit: '2024-10-30',
      findings: 3,
      recommendations: [
        'Update CTO reporting templates',
        'Implement guest nationality verification',
        'Enhance occupancy reporting accuracy'
      ]
    },
    {
      area: 'Employment Law',
      score: 96,
      maxScore: 100,
      lastAudit: '2024-11-20',
      findings: 1,
      recommendations: [
        'Update employment contracts',
        'Implement digital timesheet system'
      ]
    },
    {
      area: 'Health & Safety',
      score: 89,
      maxScore: 100,
      lastAudit: '2024-12-05',
      findings: 4,
      recommendations: [
        'Update fire safety procedures',
        'Enhance pool safety monitoring',
        'Implement incident reporting system',
        'Update first aid equipment'
      ]
    }
  ]

  const getStatusColor = (status: string): string => {
    switch (status) {
      case 'current': return 'text-green-600 bg-green-100'
      case 'due_soon': return 'text-yellow-600 bg-yellow-100'
      case 'overdue': return 'text-red-600 bg-red-100'
      case 'submitted': return 'text-blue-600 bg-blue-100'
      case 'completed': return 'text-green-600 bg-green-100'
      case 'in_progress': return 'text-blue-600 bg-blue-100'
      case 'pending': return 'text-yellow-600 bg-yellow-100'
      case 'escalated': return 'text-red-600 bg-red-100'
      case 'active': return 'text-green-600 bg-green-100'
      case 'draft': return 'text-yellow-600 bg-yellow-100'
      case 'expired': return 'text-red-600 bg-red-100'
      default: return 'text-gray-600 bg-gray-100'
    }
  }

  const getTypeIcon = (type: string): string => {
    switch (type) {
      case 'cto': return '🏛️'
      case 'vat': return '💰'
      case 'tourism_tax': return '🏖️'
      case 'gdpr': return '🔒'
      case 'employment': return '👥'
      case 'health_safety': return '🛡️'
      case 'data_request': return '📋'
      case 'data_deletion': return '🗑️'
      case 'data_breach': return '⚠️'
      case 'consent_update': return '✏️'
      case 'contract': return '📄'
      case 'policy': return '📋'
      case 'terms': return '📜'
      case 'privacy': return '🔒'
      case 'license': return '🏛️'
      default: return '📄'
    }
  }

  const getPriorityColor = (priority: string): string => {
    switch (priority) {
      case 'high': return 'text-red-600 bg-red-100'
      case 'medium': return 'text-yellow-600 bg-yellow-100'
      case 'low': return 'text-green-600 bg-green-100'
      default: return 'text-gray-600 bg-gray-100'
    }
  }

  const getComplianceScoreColor = (score: number): string => {
    if (score >= 95) return 'text-green-600'
    if (score >= 85) return 'text-yellow-600'
    return 'text-red-600'
  }

  const filteredReports = complianceReports.filter(report => {
    if (reportType === 'all') return true
    return report.type === reportType
  })

  const dueReports = complianceReports.filter(r => r.status === 'due_soon' || r.status === 'overdue').length
  const currentReports = complianceReports.filter(r => r.status === 'current').length
  const pendingGDPR = gdprRecords.filter(r => r.status === 'pending' || r.status === 'in_progress').length
  const avgCompliance = complianceMetrics.reduce((sum, metric) => sum + (metric.score / metric.maxScore), 0) / complianceMetrics.length * 100

  return (
    <div className="p-6 space-y-6">
      <div className="flex justify-between items-center">
        <h1 className="text-2xl font-bold text-gray-900">Cyprus Compliance Center</h1>
        <div className="flex gap-2">
          <button
            onClick={handleGenerateReport}
            className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm"
          >
            📊 Generate Report
          </button>
          <button
            onClick={handleComplianceAudit}
            className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm"
          >
            📋 Compliance Audit
          </button>
          <button
            onClick={handleSettings}
            className="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 text-sm"
          >
            ⚙️ Settings
          </button>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center gap-3">
            <div className="text-3xl">📋</div>
            <div>
              <p className="text-sm text-gray-600">Due Reports</p>
              <p className="text-2xl font-bold text-gray-900">{dueReports}</p>
            </div>
          </div>
        </div>
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center gap-3">
            <div className="text-3xl">✅</div>
            <div>
              <p className="text-sm text-gray-600">Current Reports</p>
              <p className="text-2xl font-bold text-gray-900">{currentReports}</p>
            </div>
          </div>
        </div>
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center gap-3">
            <div className="text-3xl">🔒</div>
            <div>
              <p className="text-sm text-gray-600">GDPR Requests</p>
              <p className="text-2xl font-bold text-gray-900">{pendingGDPR}</p>
            </div>
          </div>
        </div>
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center gap-3">
            <div className="text-3xl">📊</div>
            <div>
              <p className="text-sm text-gray-600">Compliance Score</p>
              <p className={`text-2xl font-bold ${getComplianceScoreColor(avgCompliance)}`}>
                {avgCompliance.toFixed(0)}%
              </p>
            </div>
          </div>
        </div>
      </div>

      <div className="bg-white rounded-lg shadow">
        <div className="border-b border-gray-200">
          <nav className="flex space-x-8 px-6">
            {['overview', 'reports', 'tax', 'gdpr', 'documents', 'metrics'].map((tab) => (
              <button
                key={tab}
                onClick={() => setActiveTab(tab)}
                className={`py-4 px-1 border-b-2 font-medium text-sm ${
                  activeTab === tab
                    ? 'border-blue-500 text-blue-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                {tab.charAt(0).toUpperCase() + tab.slice(1)}
              </button>
            ))}
          </nav>
        </div>

        <div className="p-6">
          {activeTab === 'overview' && (
            <div className="space-y-6">
              <h2 className="text-lg font-semibold">Compliance Overview</h2>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div className="bg-red-50 rounded-lg p-4">
                  <h3 className="font-medium text-red-800 mb-3">⚠️ Urgent Actions Required</h3>
                  <div className="space-y-2">
                    {complianceReports.filter(r => r.status === 'due_soon' || r.status === 'overdue').map(report => (
                      <div key={report.id} className="flex justify-between items-center text-sm">
                        <div className="flex items-center gap-2">
                          <span>{getTypeIcon(report.type)}</span>
                          <span>{report.title}</span>
                        </div>
                        <span className="text-red-600 font-medium">{report.nextDueDate}</span>
                      </div>
                    ))}
                  </div>
                </div>

                <div className="bg-blue-50 rounded-lg p-4">
                  <h3 className="font-medium text-blue-800 mb-3">📋 Recent GDPR Requests</h3>
                  <div className="space-y-2">
                    {gdprRecords.slice(0, 4).map(record => (
                      <div key={record.id} className="flex justify-between items-center text-sm">
                        <div className="flex items-center gap-2">
                          <span>{getTypeIcon(record.type)}</span>
                          <span>{record.guestName}</span>
                        </div>
                        <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(record.status)}`}>
                          {record.status.replace('_', ' ')}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <div className="bg-white border border-gray-200 rounded-lg p-6">
                <h3 className="font-semibold mb-4">Cyprus-Specific Compliance Areas</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  <div className="text-center p-4 bg-gray-50 rounded-lg">
                    <div className="text-2xl mb-2">🏛️</div>
                    <div className="font-semibold">CTO Reporting</div>
                    <div className="text-sm text-gray-600">Tourism statistics for Cyprus Tourism Organization</div>
                    <div className="mt-2 text-green-600 font-medium">✓ Current</div>
                  </div>
                  <div className="text-center p-4 bg-gray-50 rounded-lg">
                    <div className="text-2xl mb-2">💰</div>
                    <div className="font-semibold">VAT Compliance</div>
                    <div className="text-sm text-gray-600">19% VAT rate for hospitality services</div>
                    <div className="mt-2 text-green-600 font-medium">✓ Current</div>
                  </div>
                  <div className="text-center p-4 bg-gray-50 rounded-lg">
                    <div className="text-2xl mb-2">🏖️</div>
                    <div className="font-semibold">Tourism Tax</div>
                    <div className="text-sm text-gray-600">€1.50 per night development levy</div>
                    <div className="mt-2 text-yellow-600 font-medium">⚠ Due Soon</div>
                  </div>
                </div>
              </div>

              <div className="bg-green-50 rounded-lg p-4">
                <h4 className="text-sm font-medium text-green-800 mb-2">💡 Compliance Best Practices</h4>
                <ul className="text-sm text-green-700 space-y-1">
                  <li>• All tax reports are automatically generated from booking data</li>
                  <li>• GDPR requests are processed within 30 days as required by EU law</li>
                  <li>• Legal documents are reviewed quarterly and updated as needed</li>
                  <li>• Staff receive annual compliance training on Cyprus hospitality regulations</li>
                  <li>• Regular audits ensure adherence to local and EU requirements</li>
                </ul>
              </div>
            </div>
          )}

          {activeTab === 'reports' && (
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-lg font-semibold">Compliance Reports</h2>
                <div className="flex gap-2">
                  <select
                    value={reportType}
                    onChange={(e) => setReportType(e.target.value)}
                    className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  >
                    <option value="all">All Types</option>
                    <option value="cto">CTO Reports</option>
                    <option value="vat">VAT Reports</option>
                    <option value="tourism_tax">Tourism Tax</option>
                    <option value="gdpr">GDPR Reports</option>
                    <option value="employment">Employment</option>
                    <option value="health_safety">Health & Safety</option>
                  </select>
                  <button
                    onClick={handleGenerateReport}
                    className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm"
                  >
                    📊 Generate Report
                  </button>
                </div>
              </div>

              <div className="space-y-4">
                {filteredReports.map((report) => (
                  <div key={report.id} className="border border-gray-200 rounded-lg p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="flex items-start gap-3">
                        <span className="text-2xl">{getTypeIcon(report.type)}</span>
                        <div>
                          <h3 className="font-semibold">{report.title}</h3>
                          <p className="text-sm text-gray-600 mt-1">{report.description}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(report.status)}`}>
                          {report.status.replace('_', ' ').toUpperCase()}
                        </span>
                        {report.autoGenerated && (
                          <span className="px-2 py-1 bg-blue-100 text-blue-800 rounded-full text-xs">
                            🤖 Auto
                          </span>
                        )}
                      </div>
                    </div>

                    <div className="grid grid-cols-1 lg:grid-cols-4 gap-6 mb-4">
                      <div>
                        <span className="text-gray-600 text-sm">Reporting Period:</span>
                        <div className="font-medium">{report.reportingPeriod}</div>
                      </div>
                      <div>
                        <span className="text-gray-600 text-sm">Next Due Date:</span>
                        <div className={`font-medium ${report.status === 'due_soon' || report.status === 'overdue' ? 'text-red-600' : ''}`}>
                          {report.nextDueDate}
                        </div>
                      </div>
                      <div>
                        <span className="text-gray-600 text-sm">Last Submitted:</span>
                        <div className="font-medium">{report.lastSubmitted || 'Never'}</div>
                      </div>
                      <div>
                        <span className="text-gray-600 text-sm">Submitted By:</span>
                        <div className="font-medium">{report.submittedBy || 'N/A'}</div>
                      </div>
                    </div>

                    <div className="flex justify-end gap-2 pt-4 border-t border-gray-100">
                      <button
                        onClick={() => toast.info('Viewing report details...')}
                        className="px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700"
                      >
                        👁️ View
                      </button>
                      <button
                        onClick={handleGenerateReport}
                        className="px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700"
                      >
                        📊 Generate
                      </button>
                      <button
                        onClick={() => handleSubmitReport('CTO Monthly')}
                        className="px-3 py-1 bg-purple-600 text-white rounded text-sm hover:bg-purple-700"
                      >
                        📤 Submit
                      </button>
                      <button
                        onClick={() => toast.info('Opening report configuration...')}
                        className="px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700"
                      >
                        ⚙️ Configure
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {activeTab === 'tax' && (
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-lg font-semibold">Tax Reports & Analytics</h2>
                <div className="flex gap-2">
                  <select
                    value={selectedPeriod}
                    onChange={(e) => setSelectedPeriod(e.target.value)}
                    className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  >
                    <option value="current">Current Period</option>
                    <option value="last3">Last 3 Months</option>
                    <option value="ytd">Year to Date</option>
                    <option value="custom">Custom Range</option>
                  </select>
                  <button
                    onClick={handleExportTaxReport}
                    className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm"
                  >
                    📊 Export Tax Report
                  </button>
                </div>
              </div>

              <div className="space-y-6">
                {taxReports.map((report) => (
                  <div key={report.period} className="bg-white border border-gray-200 rounded-lg p-6">
                    <h3 className="font-semibold mb-4">Tax Report - {report.period}</h3>

                    <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
                      <div className="bg-blue-50 rounded-lg p-4">
                        <h4 className="font-medium text-blue-800 mb-3">Revenue Breakdown</h4>
                        <div className="space-y-2 text-sm">
                          <div className="flex justify-between">
                            <span>Room Revenue:</span>
                            <span className="font-medium">€{report.roomRevenue.toLocaleString()}</span>
                          </div>
                          <div className="flex justify-between">
                            <span>Service Revenue:</span>
                            <span className="font-medium">€{report.serviceRevenue.toLocaleString()}</span>
                          </div>
                          <div className="flex justify-between border-t pt-2 font-semibold">
                            <span>Total Revenue:</span>
                            <span>€{report.totalRevenue.toLocaleString()}</span>
                          </div>
                        </div>
                      </div>

                      <div className="bg-green-50 rounded-lg p-4">
                        <h4 className="font-medium text-green-800 mb-3">VAT Summary ({report.vatRate}%)</h4>
                        <div className="space-y-2 text-sm">
                          <div className="flex justify-between">
                            <span>VAT Rate:</span>
                            <span className="font-medium">{report.vatRate}%</span>
                          </div>
                          <div className="flex justify-between">
                            <span>VAT Collected:</span>
                            <span className="font-medium">€{report.vatCollected.toLocaleString()}</span>
                          </div>
                          <div className="flex justify-between border-t pt-2 font-semibold">
                            <span>Net Revenue:</span>
                            <span>€{(report.totalRevenue - report.vatCollected).toLocaleString()}</span>
                          </div>
                        </div>
                      </div>

                      <div className="bg-orange-50 rounded-lg p-4">
                        <h4 className="font-medium text-orange-800 mb-3">Tourism Tax (€{report.tourismTaxRate}/night)</h4>
                        <div className="space-y-2 text-sm">
                          <div className="flex justify-between">
                            <span>Taxable Nights:</span>
                            <span className="font-medium">{report.tourismTaxNights.toLocaleString()}</span>
                          </div>
                          <div className="flex justify-between">
                            <span>Tax Collected:</span>
                            <span className="font-medium">€{report.tourismTaxCollected.toLocaleString()}</span>
                          </div>
                          <div className="flex justify-between border-t pt-2 font-semibold">
                            <span>Rate per Night:</span>
                            <span>€{report.tourismTaxRate}</span>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-gray-50 rounded-lg p-4">
                      <h4 className="font-medium text-gray-800 mb-3">Tax Exemptions</h4>
                      <div className="grid grid-cols-3 gap-4 text-sm">
                        <div className="text-center">
                          <div className="text-lg font-bold text-blue-600">{report.exemptions.children}</div>
                          <div className="text-gray-600">Children Under 12</div>
                        </div>
                        <div className="text-center">
                          <div className="text-lg font-bold text-green-600">{report.exemptions.locals}</div>
                          <div className="text-gray-600">Cyprus Residents</div>
                        </div>
                        <div className="text-center">
                          <div className="text-lg font-bold text-purple-600">{report.exemptions.diplomatic}</div>
                          <div className="text-gray-600">Diplomatic Immunity</div>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {activeTab === 'gdpr' && (
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-lg font-semibold">GDPR Data Protection</h2>
                <button
                  onClick={handleGenerateGDPRReport}
                  className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm"
                >
                  📊 GDPR Report
                </button>
              </div>

              <div className="space-y-4">
                {gdprRecords.map((record) => (
                  <div key={record.id} className="border border-gray-200 rounded-lg p-6">
                    <div className="flex justify-between items-start mb-4">
                      <div className="flex items-start gap-3">
                        <span className="text-xl">{getTypeIcon(record.type)}</span>
                        <div>
                          <h3 className="font-medium">{record.guestName}</h3>
                          <p className="text-sm text-gray-600">{record.guestEmail}</p>
                          <p className="text-xs text-gray-500 mt-1">{record.description}</p>
                        </div>
                      </div>
                      <div className="flex items-center gap-2">
                        <span className={`px-2 py-1 rounded-full text-xs ${getPriorityColor(record.priority)}`}>
                          {record.priority.toUpperCase()}
                        </span>
                        <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(record.status)}`}>
                          {record.status.replace('_', ' ').toUpperCase()}
                        </span>
                      </div>
                    </div>

                    <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-4 text-sm">
                      <div>
                        <span className="text-gray-600">Request Date:</span>
                        <div className="font-medium">{record.requestDate}</div>
                      </div>
                      <div>
                        <span className="text-gray-600">Processed By:</span>
                        <div className="font-medium">{record.processedBy || 'Unassigned'}</div>
                      </div>
                      <div>
                        <span className="text-gray-600">Completed:</span>
                        <div className="font-medium">{record.completedDate || 'Pending'}</div>
                      </div>
                      <div>
                        <span className="text-gray-600">Type:</span>
                        <div className="font-medium capitalize">{record.type.replace('_', ' ')}</div>
                      </div>
                    </div>

                    <div className="flex justify-end gap-2 pt-4 border-t border-gray-100">
                      <button
                        onClick={() => toast.info('Viewing GDPR request details...')}
                        className="px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-700"
                      >
                        👁️ View Details
                      </button>
                      {record.status === 'pending' && (
                        <button
                          onClick={handleProcessGDPRRequest}
                          className="px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-700"
                        >
                          ▶️ Process
                        </button>
                      )}
                      {record.status === 'in_progress' && (
                        <button
                          onClick={() => toast.success('GDPR request marked as complete!')}
                          className="px-3 py-1 bg-purple-600 text-white rounded text-sm hover:bg-purple-700"
                        >
                          ✅ Complete
                        </button>
                      )}
                      <button
                        onClick={() => toast.info('Opening email composer...')}
                        className="px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-700"
                      >
                        📧 Contact Guest
                      </button>
                    </div>
                  </div>
                ))}
              </div>

              <div className="bg-blue-50 rounded-lg p-4">
                <h4 className="text-sm font-medium text-blue-800 mb-2">📋 GDPR Compliance Status</h4>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                  <div className="text-center">
                    <div className="text-lg font-bold text-blue-600">
                      {gdprRecords.filter(r => r.status === 'completed').length}
                    </div>
                    <div className="text-blue-700">Completed Requests</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-yellow-600">
                      {gdprRecords.filter(r => r.status === 'in_progress').length}
                    </div>
                    <div className="text-blue-700">In Progress</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-green-600">96%</div>
                    <div className="text-blue-700">Compliance Score</div>
                  </div>
                  <div className="text-center">
                    <div className="text-lg font-bold text-purple-600">18 days</div>
                    <div className="text-blue-700">Avg Response Time</div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {activeTab === 'documents' && (
            <div className="space-y-6">
              <div className="flex justify-between items-center">
                <h2 className="text-lg font-semibold">Legal Documents</h2>
                <button
                  onClick={handleUploadDocument}
                  className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 text-sm"
                >
                  ➕ Upload Document
                </button>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {legalDocuments.map((document) => (
                  <div key={document.id} className="border border-gray-200 rounded-lg p-4">
                    <div className="flex justify-between items-start mb-3">
                      <div className="flex items-start gap-2">
                        <span className="text-lg">{getTypeIcon(document.type)}</span>
                        <div>
                          <h3 className="font-medium">{document.title}</h3>
                          <p className="text-xs text-gray-500">v{document.version}</p>
                        </div>
                      </div>
                      <span className={`px-2 py-1 rounded-full text-xs ${getStatusColor(document.status)}`}>
                        {document.status.toUpperCase()}
                      </span>
                    </div>

                    <div className="space-y-2 text-sm mb-4">
                      <div className="flex justify-between">
                        <span className="text-gray-600">Type:</span>
                        <span className="font-medium capitalize">{document.type}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">Language:</span>
                        <span className="font-medium">{document.language.toUpperCase()}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">Last Updated:</span>
                        <span className="font-medium">{document.lastUpdated}</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">Region:</span>
                        <span className="font-medium">{document.applicableRegion}</span>
                      </div>
                    </div>

                    <div className="flex gap-2">
                      <button
                        onClick={() => handleViewDocument('Cyprus Privacy Policy')}
                        className="flex-1 px-3 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 text-sm"
                      >
                        👁️ View
                      </button>
                      <button
                        onClick={() => toast.info('Opening document editor...')}
                        className="flex-1 px-3 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 text-sm"
                      >
                        ✏️ Edit
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          )}

          {activeTab === 'metrics' && (
            <div className="space-y-6">
              <h2 className="text-lg font-semibold">Compliance Metrics</h2>

              <div className="space-y-6">
                {complianceMetrics.map((metric, index) => (
                  <div key={index} className="bg-white border border-gray-200 rounded-lg p-6">
                    <div className="flex justify-between items-center mb-4">
                      <h3 className="font-semibold">{metric.area}</h3>
                      <div className="flex items-center gap-3">
                        <span className={`text-2xl font-bold ${getComplianceScoreColor(metric.score / metric.maxScore * 100)}`}>
                          {metric.score}/{metric.maxScore}
                        </span>
                        <div className="text-right text-sm text-gray-600">
                          <div>Last Audit: {metric.lastAudit}</div>
                          <div>{metric.findings} findings</div>
                        </div>
                      </div>
                    </div>

                    <div className="mb-4">
                      <div className="w-full bg-gray-200 rounded-full h-2">
                        <div
                          className={`h-2 rounded-full ${metric.score / metric.maxScore >= 0.95 ? 'bg-green-500' : metric.score / metric.maxScore >= 0.85 ? 'bg-yellow-500' : 'bg-red-500'}`}
                          style={{ width: `${(metric.score / metric.maxScore) * 100}%` }}
                        ></div>
                      </div>
                    </div>

                    <div>
                      <h4 className="text-sm font-medium text-gray-700 mb-2">Recommendations</h4>
                      <ul className="text-sm text-gray-600 space-y-1">
                        {metric.recommendations.map((rec, ridx) => (
                          <li key={ridx}>• {rec}</li>
                        ))}
                      </ul>
                    </div>
                  </div>
                ))}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                <div className="bg-green-50 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-green-600">{avgCompliance.toFixed(0)}%</div>
                  <div className="text-sm text-gray-600">Overall Compliance</div>
                </div>
                <div className="bg-blue-50 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-blue-600">
                    {complianceMetrics.reduce((sum, m) => sum + m.findings, 0)}
                  </div>
                  <div className="text-sm text-gray-600">Total Findings</div>
                </div>
                <div className="bg-purple-50 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-purple-600">
                    {complianceMetrics.filter(m => (m.score / m.maxScore) >= 0.95).length}
                  </div>
                  <div className="text-sm text-gray-600">Areas &gt; 95%</div>
                </div>
                <div className="bg-orange-50 rounded-lg p-4 text-center">
                  <div className="text-2xl font-bold text-orange-600">Q1 2025</div>
                  <div className="text-sm text-gray-600">Next Full Audit</div>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
      <Toaster position="top-right" />
    </div>
  )
}